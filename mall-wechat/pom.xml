<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.jfeat</groupId>
    <artifactId>mall-wechat</artifactId>
    <packaging>war</packaging>
    <name>mall-wechat</name>
    <parent>
        <groupId>com.jfeat</groupId>
        <artifactId>mall-parent</artifactId>
        <version>2.3.0</version>
        <relativePath></relativePath>
    </parent>

    <properties>
        <!--<wechatHtmlZip>file:///Users/jackyhuang/workspace/biliya-mall-wechat-html/biliya-mall-wechat-html.zip</wechatHtmlZip>-->
<!--        <wechatHtmlZip>file:///Users/panda/Downloads/mall-wechat-html.zip</wechatHtmlZip>-->
        <wechatHtmlZip>http://120.79.49.72:8000/link/mall-wechat-html/mall-wechat-html.zip</wechatHtmlZip>
    </properties>

    <!-- 依赖项定义 -->
    <dependencies>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>


        <dependency>
            <groupId>com.jfinal</groupId>
            <artifactId>jfinal-weixin</artifactId>
            <version>2.1</version>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.31</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.4.3</version>
        </dependency>

        <dependency>
            <groupId>com.jfeat</groupId>
            <artifactId>jfeat-core</artifactId>
            <version>${jfeat.core.version}</version>
        </dependency>

        <dependency>
            <groupId>com.jfinal</groupId>
            <artifactId>jfinal</artifactId>
            <version>${jfinal.version}</version>
        </dependency>

        <dependency>
            <groupId>com.jfinal</groupId>
            <artifactId>cos</artifactId>
            <version>26Dec2008</version>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <scope>provided</scope>
            <version>${servlet.version}</version>
        </dependency>


        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-all</artifactId>
            <version>${shiro.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.shiro</groupId>
            <artifactId>shiro-ehcache</artifactId>
            <version>${shiro.version}</version>
        </dependency>

        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>${ehcache.version}</version>
        </dependency>


        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>${freemarker.version}</version>
        </dependency>

        <dependency>
            <groupId>org.codehaus.jackson</groupId>
            <artifactId>jackson-mapper-asl</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons.lang3.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>${commons.codec.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>

        <!-- LOGGING begin -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>runtime</scope>
        </dependency>

        <!-- 代码直接调用log4j会被桥接到slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- 代码直接调用common-logging会被桥接到slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- 代码直接调用java.util.logging会被桥接到slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jul-to-slf4j</artifactId>
            <version>${slf4j.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- LOGGING end -->

        <dependency>
            <groupId>com.jfinal</groupId>
            <artifactId>jetty-server</artifactId>
            <version>8.1.8</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-jsp</artifactId>
            <version>8.1.8.v20121106</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.5</version>
                <executions>
                    <execution>
                        <id>make-a-jar</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <excludes>
                        <exclude>**/config.properties</exclude>
                    </excludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <overlays>
                        <overlay>
                        </overlay>
                    </overlays>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.5.2</version>
                <executions>
                    <execution>
                        <id>install-library</id>
                        <phase>install</phase>
                        <goals>
                            <goal>install-file</goal>
                        </goals>
                        <configuration>
                            <file>${project.build.directory}/${project.artifactId}-${project.version}.jar</file>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>${project.artifactId}</artifactId>
                            <version>${project.version}</version>
                            <packaging>jar</packaging>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <executions>
                    <execution>
                        <phase>deploy</phase>
                        <goals>
                            <goal>deploy-file</goal>
                        </goals>
                        <configuration>
                            <packaging>jar</packaging>
                            <generatePom>true</generatePom>
                            <url>${project.distributionManagement.repository.url}</url>
                            <artifactId>${project.artifactId}</artifactId>
                            <groupId>${project.groupId}</groupId>
                            <version>${project.version}</version>
                            <file>${project.build.directory}/${project.artifactId}-${project.version}.jar</file>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>${jetty.server.version}</version>
                <configuration>
                    <jettyXml>jetty/jetty.xml,jetty/jetty-ssl.xml,jetty/jetty-https.xml</jettyXml>
                    <systemProperties>
                        <systemProperty>
                            <name>org.eclipse.jetty.annotations.maxWait</name>
                            <value>120</value>
                        </systemProperty>
                        <systemProperty>
                            <name>jfeat.config.properties</name>
                            <value>config-dev.properties</value>
                        </systemProperty>
                    </systemProperties>
                    <scanIntervalSeconds>10</scanIntervalSeconds>
                    <httpConnector>
                        <port>9990</port>
                    </httpConnector>
                    <webApp>
                        <contextPath>/</contextPath>
                    </webApp>
                    <scanTargets>
                        <scanTarget>target/classes</scanTarget>
                    </scanTargets>
                </configuration>
            </plugin>


            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.7</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <configuration>
                            <tasks>
                                <get src="${wechatHtmlZip}"
                                     dest="target/mall-wechat-html.zip"
                                     verbose="true"
                                     maxtime="180"
                                     retries="3"
                                     skipexisting="true"
                                     usetimestamp="true"/>
                                <unzip src="target/mall-wechat-html.zip" dest="target/" />
                                <copy todir="src/main/webapp/WEB-INF/pages/app" overwrite="true">
                                    <fileset dir="target/dist" includes="*.html" />
                                </copy>
                                <delete failonerror="false">
                                    <fileset dir="src/main/webapp/bower_components" />
                                    <fileset dir="src/main/webapp/components" />
                                    <fileset dir="src/main/webapp/css" />
                                    <fileset dir="src/main/webapp/img" />
                                    <fileset dir="src/main/webapp/js" />
                                    <fileset dir="src/main/webapp/pages" />
                                    <fileset dir="src/main/webapp/lib" />
                                </delete>
                                <copy todir="src/main/webapp">
                                    <fileset dir="target/dist" includes="bower_components/**" />
                                    <fileset dir="target/dist" includes="components/**" />
                                    <fileset dir="target/dist" includes="css/**" />
                                    <fileset dir="target/dist" includes="img/**" />
                                    <fileset dir="target/dist" includes="js/**" />
                                    <fileset dir="target/dist" includes="pages/**" />
                                    <fileset dir="target/dist" includes="lib/**" />
                                </copy>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>com.jfeat</groupId>
                <artifactId>file-edit</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <id>insert</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>edit</goal>
                        </goals>
                        <configuration>
                            <file>${project.basedir}/src/main/webapp/WEB-INF/pages/app/index.html</file>
                            <line>-1</line>
                            <insert>true</insert>
                            <content><![CDATA[
<script>
  angular.module('global', [])
    .constant('API', '${api_url}/rest')
    .constant('GlobalVariable', {
      MALL_NAME: '${mall_name!}',
      WPAY_URL: '${wpay_url}',
      SERVER_PATH: '${api_url}/rest',
      ACCESS_TOKEN: '${access_token!}',
      SELLER_SHIP: '${sellership}',
      FOLLOW_US_URL: '${followus_url!}',
      CAN_APPLY_CROWN: ${can_apply_crown?c},
      APPLY_PHYSICAL_CROWN_TEXT: '${apply_physical_crown_text!}',
      APPLY_PHYSICAL_SELLER_TEXT: '${apply_physical_seller_text!}',
      SHOW_PRODUCT_CATEGORY_MENU: ${show_product_category_menu?c},
      EXTENSION: { ${extension!} },
      ${merchant!}
    })
    .value('LoginSession', {
      token: 'token'
    });
</script>
                            ]]></content>
                        </configuration>
                    </execution>
                    <execution>
                        <id>replace</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>edit</goal>
                        </goals>
                        <configuration>
                            <file>${project.basedir}/src/main/webapp/WEB-INF/pages/app/index.html</file>
                            <replace>true</replace>
                            <keyword><![CDATA[<title>十美优品商城</title>]]></keyword>
                            <content><![CDATA[<title>${mall_name!'商城'}</title>]]></content>
                        </configuration>
                    </execution>
                    <execution>
                        <id>replace-weuicss</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>edit</goal>
                        </goals>
                        <configuration>
                            <file>${project.basedir}/src/main/webapp/WEB-INF/pages/app/index.html</file>
                            <replace>true</replace>
                            <keyword><![CDATA[<link rel="stylesheet" href="lib/css/weui/weui.min.css">]]></keyword>
                            <content><![CDATA[<link rel="stylesheet" href="${weuiCss!'lib/css/weui/weui.min.css'}">]]></content>
                        </configuration>
                    </execution>
                    <execution>
                        <id>replace-angularjs</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>edit</goal>
                        </goals>
                        <configuration>
                            <file>${project.basedir}/src/main/webapp/WEB-INF/pages/app/index.html</file>
                            <replace>true</replace>
                            <keyword><![CDATA[<script src="bower_components/angular/angular.min.js"></script>]]></keyword>
                            <content><![CDATA[<script src="${angularJs!'bower_components/angular/angular.min.js'}"></script>]]></content>
                        </configuration>
                    </execution>
                    <execution>
                        <id>replace-angular-ui-router-js</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>edit</goal>
                        </goals>
                        <configuration>
                            <file>${project.basedir}/src/main/webapp/WEB-INF/pages/app/index.html</file>
                            <replace>true</replace>
                            <keyword><![CDATA[<script src="bower_components/angular-ui-router/release/angular-ui-router.min.js"></script>]]></keyword>
                            <content><![CDATA[<script src="${angularUiRouterJs!'bower_components/angular-ui-router/release/angular-ui-router.min.js'}"></script>]]></content>
                        </configuration>
                    </execution>
                    <execution>
                        <id>replace-oclazyload-js</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>edit</goal>
                        </goals>
                        <configuration>
                            <file>${project.basedir}/src/main/webapp/WEB-INF/pages/app/index.html</file>
                            <replace>true</replace>
                            <keyword><![CDATA[<script src="bower_components/oclazyload/dist/ocLazyLoad.min.js"></script>]]></keyword>
                            <content><![CDATA[<script src="${ocLazyLoadJs!'bower_components/oclazyload/dist/ocLazyLoad.min.js'}"></script>]]></content>
                        </configuration>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>


</project>
